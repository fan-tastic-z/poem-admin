name: Build & Unit Tests

on:
  push:
    branches:
      - main
      - develop
    tags:
      - v*
  pull_request:
    branches:
      - main
      - develop

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build-rust:
    strategy:
      matrix:
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy, llvm-tools-preview

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Install nextest
        uses: taiki-e/install-action@nextest

      - uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: true

      - name: Check code format
        run: cargo fmt -- --check

      - name: Check the package for errors
        run: cargo check --all

      - name: Lint rust sources
        run: cargo clippy --all-targets --all-features --tests --benches -- -D warnings

      - name: Execute unit tests with coverage
        run: |
          cargo llvm-cov nextest --lcov --output-path lcov.info --lib --bins
          echo "Unit tests completed successfully"

      - name: Build release binary (for tags)
        if: startsWith(github.ref, 'refs/tags/')
        run: cargo build --release

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v2
        id: git-cliff
        if: startsWith(github.ref, 'refs/tags/')
        with:
          config: cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGES.md

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body: ${{ steps.git-cliff.outputs.content }}
          files: |
            target/release/poem-admin*

  # 添加状态检查，确保集成测试也通过了
  check-integration-tests:
    name: Check Integration Tests Status
    runs-on: ubuntu-latest
    needs: build-rust
    if: github.event_name == 'pull_request'
    steps:
      - name: Wait for integration tests
        uses: lewagon/wait-on-check-action@v1.3.4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          check-name: "Integration Tests"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 30
          allowed-conclusions: success
